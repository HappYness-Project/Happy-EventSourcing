@using HP.Application.Commands
@using HP.Application.DTOs
@inject MediatR.IMediator _mediator

<div class="card">
    <div class="card-header">
        Update Person.
    </div>
    <div class="card-body">
        <EditForm Model="@person" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label for="dateInput">User ID: @person.UserId</label>
            </div>
            <div class="form-group">
                <label for="dateInput">FirstName</label>
                <InputText class="form-check control mx-2" @bind-Value="person.FirstName"/>
            </div>
            <div class="form-group">
                <label for="dateInput">LastName</label>
                <InputText class="form-check control mx-2" @bind-Value="person.LastName"/>
            </div>

            <div>
                <button type="submit" class="btn btn-primary">Submit</button>
            </div>
        </EditForm>
    </div>
</div>


@code {
    [Parameter] public PersonDetailsDto person { get; set; } = new();
    [Parameter] public EventCallback OnSubmitCallback { get; set; }

    public async void HandleValidSubmit()
    {
        var check = await _mediator.Send(new UpdatePersonCommand(person.UserId, person.FirstName, person.LastName, person.Email));
        await OnSubmitCallback.InvokeAsync();
    }



}
