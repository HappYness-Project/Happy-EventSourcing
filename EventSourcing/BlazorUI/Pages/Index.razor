@page "/"
@using HP.Application.DTOs
@using HP.Application.Queries
@inject MediatR.IMediator _mediator

<PageTitle>
</PageTitle>
<h1>Person List Displaying.</h1>
<div class="container">
    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var p in people)
            {
                <tr>
                    <td>@p.FirstName</td>
                    <td>@p.LastName</td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="container">
    <label>Person Information</label>
    <input type="text" class="form-control" @onchange="OnChangedAsync" />
    <h3 class="bg-secondary text-white">@UserNameInput</h3>
</div>


@code {

    [Parameter]
    public EventCallback<string> ValueChanged { get; set; }

    public string UserNameInput { get; set; }
    public async Task OnChangedAsync(ChangeEventArgs args)
    {
        UserNameInput = args.Value as string;
        //StateHasChanged();
    }


    IEnumerable<PersonDetailsDto> people = new List<PersonDetailsDto>();
    protected override async Task OnInitializedAsync()
    {
        people =  await _mediator.Send(new GetPersonList());
    }
}
