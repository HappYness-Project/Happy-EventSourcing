@page "/todos/details/{TodoId}"
@using HP.Application.DTOs
@using HP.Application.Queries.Todos
@inject MediatR.IMediator _mediator


<div class="main">

    <h3>Todo Details for Task </h3>
    <hr />
    <div class="col-11 row">
        <h3 class="col-12 row" style="font-weight:bold">@Todos.TodoId</h3>
        <h4 class="col-12 row" style="font-weight:bold">USER ID : @Todos.UserId</h4>
        <h3 class="col-12 row" style="font-weight:bold">@Todos.TodoTitle</h3>
        <h6 class="col-12 row">Todo Type: @Todos.TodoType</h6>
        <h6 class="col-12 row">Status: @(Todos.TodoStatus != null ? @Todos.TodoStatus.Name  : "NotDefined")</h6>
            <textarea @bind="Desc" @bind:event="oninput">@Desc</textarea>
            @*<select @onchange=@(handleChange)>*@
    
        <select class="col-12 row" @onchange="StatusSelected">
        </select>

        <button class="sign-button btn btn-primary" type="submit">Save</button>
    </div>

</div>



@code {
    [Parameter]
    public string TodoId { get; set; } = string.Empty;
    public TodoDetailsDto Todos { get; set; } = new();
    public List<TodoStatus> _StatusOptions = new();

    public string Desc { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        base.OnInitializedAsync();
        Todos = await _mediator.Send(new GetTodoById(TodoId));
        Desc = Todos.Description;
    }
    public void handleChange(ChangeEventArgs args)
    {
        //SelectedId = Int32.Parse(args.Value.ToString());
    }
    void StatusSelected(ChangeEventArgs e)
    {
        var getStatus = e.Value as string;
    }
    void OnChangeForValues(ChangeEventArgs e)
    {
        
    }
}